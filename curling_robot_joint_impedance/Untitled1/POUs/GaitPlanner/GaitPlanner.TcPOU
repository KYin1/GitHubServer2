<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.2">
  <POU Name="GaitPlanner" Id="{e28e8e20-85b5-4fe0-bcf3-a17b16517cf7}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK GaitPlanner
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	gaitCount : UDINT := 0;
	recoverGaitPlanner : RecoverGait;
	StaticwalkGaitPlanner    : StaticWalkGait;
	liftBodyGaitPlanner    : LiftBodyGait;
	swingBodyGaitPlanner : SwingBodyGait;
	CurlingGaitPlanner :CurlingGait;
	CurlingGaitPlanner2 :CurlingGaitFromStance;
	RcToSlipFromCurlingPlanner:RcToSlipFromCurling;
	BLegSlipPlanner:BLegSlip;
	CurlingGaitFromSlipPlanner:CurlingGaitFromSlip;
	RcToCurlingFromSlipPlanner:RcToCurlingFromSlip;
	RcToStanceFromSlipPlanner:RcToStanceFromSlip;
	TrotWalkPlanner:TrotWalk;
	WalkSlopePlanner : WalkSlopeGait;
	
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="DoPlanning" Id="{b671005c-502a-4e79-9952-da78632d7259}">
      <Declaration><![CDATA[METHOD PUBLIC DoPlanning : BOOL
VAR_INPUT
END_VAR
VAR_OUTPUT
	isDone : BOOL;
END_VAR

VAR
	i: INT;
	j: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF gvl.gaitId = 0 THEN
	recoverGaitPlanner.DoPlanning(gaitCount);
	isDone := recoverGaitPlanner.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := recoverGaitPlanner.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := recoverGaitPlanner.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := recoverGaitPlanner.jointFceTarget[i, j];
		END_FOR
	END_FOR
ELSIF gvl.gaitId = 1 THEN
	StaticwalkGaitPlanner.DoPlanning(gaitCount);
	isDone := StaticwalkGaitPlanner.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := StaticwalkGaitPlanner.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := StaticwalkGaitPlanner.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := StaticwalkGaitPlanner.jointFceTarget[i, j];
		END_FOR
	END_FOR
ELSIF gvl.gaitId = 2 THEN
	liftBodyGaitPlanner.DoPlanning(count:=gaitCount );
	isDone := liftBodyGaitPlanner.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := liftBodyGaitPlanner.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := liftBodyGaitPlanner.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := liftBodyGaitPlanner.jointFceTarget[i, j];
		END_FOR
	END_FOR	

ELSIF gvl.gaitId = 3 THEN
	swingBodyGaitPlanner.DoPlanning(gaitCount);
	isDone := swingBodyGaitPlanner.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := swingBodyGaitPlanner.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := swingBodyGaitPlanner.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := swingBodyGaitPlanner.jointFceTarget[i, j];
		END_FOR
	END_FOR
ELSIF gvl.gaitId = 4 THEN
	CurlingGaitPlanner2.DoPlanning(gaitCount);
	isDone := CurlingGaitPlanner2.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := CurlingGaitPlanner2.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := CurlingGaitPlanner2.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := CurlingGaitPlanner2.jointFceTarget[i, j];
		END_FOR
	END_FOR
ELSIF gvl.gaitId = 5 THEN
	CurlingGaitFromSlipPlanner.DoPlanning(gaitCount);
	isDone := CurlingGaitFromSlipPlanner.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := CurlingGaitFromSlipPlanner.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := CurlingGaitFromSlipPlanner.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := CurlingGaitFromSlipPlanner.jointFceTarget[i, j];
		END_FOR
	END_FOR
ELSIF gvl.gaitId = 6 THEN
	RcToSlipFromCurlingPlanner.DoPlanning(gaitCount);
	isDone := RcToSlipFromCurlingPlanner.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := RcToSlipFromCurlingPlanner.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := RcToSlipFromCurlingPlanner.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := RcToSlipFromCurlingPlanner.jointFceTarget[i, j];
		END_FOR
	END_FOR
ELSIF gvl.gaitId = 7 THEN
	RcToCurlingFromSlipPlanner.DoPlanning(gaitCount);
	isDone := RcToCurlingFromSlipPlanner.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := RcToCurlingFromSlipPlanner.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := RcToCurlingFromSlipPlanner.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := RcToCurlingFromSlipPlanner.jointFceTarget[i, j];
		END_FOR
	END_FOR
ELSIF gvl.gaitId = 8 THEN
	RcToStanceFromSlipPlanner.DoPlanning(gaitCount);
	isDone := RcToStanceFromSlipPlanner.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := RcToStanceFromSlipPlanner.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := RcToStanceFromSlipPlanner.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := RcToStanceFromSlipPlanner.jointFceTarget[i, j];
		END_FOR
	END_FOR
ELSIF gvl.gaitId = 9 THEN
	BLegSlipPlanner.DoPlanning(gaitCount);
	isDone := BLegSlipPlanner.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := BLegSlipPlanner.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := BLegSlipPlanner.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := BLegSlipPlanner.jointFceTarget[i, j];
		END_FOR
	END_FOR
ELSIF gvl.gaitId = 10 THEN
	TrotWalkPlanner.DoPlanning(gaitCount);
	isDone := TrotWalkPlanner.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := TrotWalkPlanner.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := TrotWalkPlanner.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := TrotWalkPlanner.jointFceTarget[i, j];
		END_FOR
	END_FOR
ELSIF gvl.gaitId = 11 THEN
	WalkSlopePlanner.DoPlanning(gaitCount);
	isDone := WalkSlopePlanner.isFinished;
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			gvl.jntRefPosTuning[i, j] := WalkSlopePlanner.jointPosTarget[i, j];
			gvl.jntRefVelTuning[i, j] := WalkSlopePlanner.jointVelTarget[i, j];
			gvl.jntRefFceTuning[i, j] := WalkSlopePlanner.jointFceTarget[i, j];
		END_FOR
	END_FOR
ELSE
	// no gait selected
	FOR i := 0 TO 5 DO
		FOR j := 0 TO 2 DO
			IF ABS(gvl.jntActualPos[i, j]-gvl.lastjntRefPos[i,j])<0.1 THEN
				gvl.jntRefPosTuning[i, j] :=gvl.lastjntRefPos[i,j];
			ELSE
				gvl.jntRefPosTuning[i, j] := gvl.jntActualPos[i, j];				
			END_IF
			gvl.jntRefVelTuning[i, j] := 0;
			gvl.jntRefFceTuning[i, j] := 0;
		END_FOR
	END_FOR
	isDone := TRUE;
END_IF

//Tuning state 
(*FOR i := 0 TO 5 DO
	FOR j := 0 TO 2 DO
			IF ABS(gvl.jntActualPos[i, j]-gvl.lastjntRefPos[i,j])<0.1 THEN
				gvl.jntRefPos[i, j] :=gvl.lastjntRefPos[i,j];
			ELSE
				gvl.jntRefPos[i, j] := gvl.jntActualPos[i, j];				
			END_IF
		gvl.jntRefVel[i, j] := 0;
		gvl.jntRefFce[i, j] := 0;
	END_FOR
END_FOR*)

//Actual employment
gvl.jntRefPos:=gvl.jntRefPosTuning;
gvl.jntRefVel:=gvl.jntRefVelTuning;
gvl.jntRefFce:=gvl.jntRefFceTuning;

gaitCount := gaitCount + 1;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FinalizeGaitCmd" Id="{1655f237-6311-4aea-bffb-4de8aa2fd652}">
      <Declaration><![CDATA[METHOD PUBLIC FinalizeGaitCmd : BOOL
VAR_INPUT
END_VAR

VAR
	i: INT;
	j: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 0 TO 5 DO
	FOR j := 0 TO 2 DO
		//gvl.jntRefPos[i, j] := gvl.jntActualPos[i, j];
		gvl.jntRefVel[i, j] := 0;
		gvl.jntRefFce[i, j] := 0;
	END_FOR
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="Initialize" Id="{c1c79418-21b5-4a6b-bb9b-d3a40ca6d8bc}">
      <Declaration><![CDATA[METHOD PUBLIC Initialize : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[gaitCount := 0;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="GaitPlanner">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="GaitPlanner.DoPlanning">
      <LineId Id="44" Count="0" />
      <LineId Id="55" Count="1" />
      <LineId Id="71" Count="2" />
      <LineId Id="77" Count="1" />
      <LineId Id="76" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="96" Count="2" />
      <LineId Id="100" Count="5" />
      <LineId Id="99" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="187" Count="7" />
      <LineId Id="186" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="167" Count="8" />
      <LineId Id="209" Count="0" />
      <LineId Id="297" Count="8" />
      <LineId Id="296" Count="0" />
      <LineId Id="366" Count="8" />
      <LineId Id="365" Count="0" />
      <LineId Id="376" Count="8" />
      <LineId Id="375" Count="0" />
      <LineId Id="395" Count="8" />
      <LineId Id="276" Count="0" />
      <LineId Id="405" Count="8" />
      <LineId Id="404" Count="0" />
      <LineId Id="415" Count="8" />
      <LineId Id="414" Count="0" />
      <LineId Id="435" Count="8" />
      <LineId Id="434" Count="0" />
      <LineId Id="455" Count="8" />
      <LineId Id="454" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="90" Count="1" />
      <LineId Id="351" Count="3" />
      <LineId Id="350" Count="0" />
      <LineId Id="93" Count="2" />
      <LineId Id="89" Count="0" />
      <LineId Id="45" Count="1" />
      <LineId Id="327" Count="0" />
      <LineId Id="325" Count="0" />
      <LineId Id="328" Count="1" />
      <LineId Id="346" Count="3" />
      <LineId Id="345" Count="0" />
      <LineId Id="331" Count="2" />
      <LineId Id="326" Count="0" />
      <LineId Id="334" Count="0" />
      <LineId Id="318" Count="0" />
      <LineId Id="322" Count="2" />
      <LineId Id="39" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="GaitPlanner.FinalizeGaitCmd">
      <LineId Id="6" Count="5" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="GaitPlanner.Initialize">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>